services:
  backend:
    build: ./backend
    container_name: easyabroad-backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      #mailhog:
        #condition: service_started
    volumes:
      - ./backend:/app            # mount your local code into the container

    working_dir: /app
    command:
      - uvicorn
      - app.main:app
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
    environment:
      # Database settings â€” point at the DB service name
      DB_HOST:        easyabroad-db
      DB_USER:        user
      DB_PASSWORD:    userpassword
      DB_NAME:        easyabroad

      # JWT settings
      JWT_SECRET:     armani
      JWT_ALGORITHM:  HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 15
      REFRESH_TOKEN_EXPIRE_DAYS: 7

      # Email settings
      EMAIL_HOST:     smtp.ionos.de
      EMAIL_PORT:     "587"
      EMAIL_FROM:     noreply@easy-abroad.de
      EMAIL_USER:     noreply@easy-abroad.de
      EMAIL_PASSWORD: k9.Dy5CEaG4Q-hphahoha
      # Frontend URL
      FRONTEND_BASE_URL: http://localhost:8080

      MESSAGE_ENCRYPTION_KEY:        KG6ye-MBVb_mkSHfT5ip__NoXwR__G09-F8UdXZrqhE=


  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: easyabroad-frontend
    ports:
      - "8080:80"
    # Development phase live server function
    volumes:
    - ./frontend:/usr/share/nginx/html

  db:
    image: mysql:8.0
    container_name: easyabroad-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: armani
      MYSQL_DATABASE:      easyabroad
      MYSQL_USER:          user
      MYSQL_PASSWORD:      userpassword
      MYSQL_ROOT_HOST:     "%"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d:ro
      - db-data:/var/lib/mysql

  #mailhog:
    #image: mailhog/mailhog
    #container_name: easyabroad-mailhog
    #ports:
      #- "8025:8025"  # Web UI
      #- "1025:1025"  # SMTP

volumes:
  db-data: {}