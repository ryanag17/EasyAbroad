services:
  backend:
    build: ./backend
    container_name: easyabroad-backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app

    working_dir: /app
    command:
      - uvicorn
      - app.main:app
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
    environment:
      DB_HOST:        ${DB_HOST}
      DB_USER:        ${DB_USER}
      DB_PASSWORD:    ${DB_PASSWORD}
      DB_NAME:        ${DB_NAME}

      JWT_SECRET:     ${JWT_SECRET}
      JWT_ALGORITHM:  ${JWT_ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS}

      EMAIL_HOST:     ${EMAIL_HOST}
      EMAIL_PORT:     ${EMAIL_PORT}
      EMAIL_FROM:     ${EMAIL_FROM}
      EMAIL_USER:     ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}

      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}

      MESSAGE_ENCRYPTION_KEY: ${MESSAGE_ENCRYPTION_KEY}

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: easyabroad-frontend
    ports:
      - "8080:80"

  db:
    image: mysql:8.0
    container_name: easyabroad-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: armani
      MYSQL_DATABASE:      ${DB_NAME}
      MYSQL_USER:          ${DB_USER}
      MYSQL_PASSWORD:      ${DB_PASSWORD}
      MYSQL_ROOT_HOST:     "%"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d:ro
      - db-data:/var/lib/mysql

volumes:
  db-data: {}